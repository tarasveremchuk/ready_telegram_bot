import base64
import json
import random
from io import BytesIO
import io
import re
import datetime

import telebot
import webbrowser

import threading
import sqlite3

import time

import telebot
from telebot import types
file = open('./mytoken.txt')
mytoken = file.read()
bot = telebot.TeleBot(mytoken)
answers = ['–Ø –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤,—â–æ —Ç–∏ —Ö–æ—á–µ—à —Å–∫–∞–∑–∞—Ç–∏.', '–í–∏–±–∞—á,—è –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ —Ç–µ–±–µ.', '–Ø –Ω–µ –∑–Ω–∞—é —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.',
           '–ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å –Ω–µ –∫–∞–∑–∞–≤,—è–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Ü—é —Å–∏—Ç—É–∞—Ü—ñ—é... >_<']

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
allowed_user_id = 788388571


@bot.message_handler(commands=['start'])
def welcome(message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute("""CREATE TABLE IF NOT EXISTS login_id(
            id INTEGER
            )""")
    connect.commit()

    user_id = [message.chat.id]
    cursor.execute("INSERT INTO login_id VALUES (?);", user_id)
    connect.commit()

    user_id = message.from_user.id
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üëï‚û°Ô∏èüíµ –ü—Ä–æ–¥–∞—Ç–∏')
    button2 = types.KeyboardButton('üß≥ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üß≥')
    button6 = types.KeyboardButton('‚úèÔ∏è –ó–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ ‚úèÔ∏è')

    button3 = types.KeyboardButton('‚ùì–Ø–∫ –≤—Å–µ –ø—Ä–∞—Ü—é—î‚ùì')
    button4 = types.KeyboardButton('üë• –ü—Ä–æ –Ω–∞—Å üë•')
    button5 = types.KeyboardButton("–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ü—ñ–Ω—É")
    # –†–∞–∑–¥–µ–ª—è—é –∫–Ω–æ–ø–∫–∏ –ø–æ —Å—Ç—Ä–æ–∫–∞–º —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–æ–≤–∞—Ä—ã –±—ã–ª–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    markup.row(button1)
    markup.row(button2)
    markup.row(button3, button4)
    markup.row(button6)
    if user_id == 788388571 or user_id==5792353056 or user_id==5792353056:
        button7 = types.KeyboardButton("–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å")
        markup.row(button7)

    if message.text == '/start':
        bold_text = f"–ü—Ä–∏–≤—ñ—Ç , *{message.from_user.first_name}*! –¶–µ *–∂–∏—Ä–Ω–∏–π* —ñ *—â–µ –æ–¥–∏–Ω* –∂–∏—Ä–Ω–∏–π —Ç–µ–∫—Å—Ç."

        # bot.send_message(message.chat_id, text=bold_text, parse_mode=telegram.ParseMode.MARKDOWN)
        # –û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        bot.send_message(message.chat.id,
                         f'–ü—Ä–∏–≤—ñ—Ç üëã, *{message.from_user.first_name}*!\n–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –Ω–∞—à–æ–≥–æ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ "SndSkup"! –¢—É—Ç —Ç–æ–±—ñ –≤–¥–∞—Å—Ç—å—Å—è –ø—Ä–æ–¥–∞—Ç–∏ —Å–≤—ñ–π —Ç–æ–≤–∞—Ä –≤—Å—å–æ–≥–æ –∑–∞ –¥–µ–∫—ñ–ª—å–∫–∞ –∫–ª—ñ–∫—ñ–≤.',reply_markup=markup,
                         parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, '–ó–∞–∫–∏–Ω—É–≤ —Ç–µ–±–µ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é,–≤–∏–±–∏—Ä–∞–π!', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥, –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤ –∫–Ω–æ–ø–∫–∞—Ö
@bot.message_handler()
def info(message):
    if message.text == 'üëï‚û°Ô∏èüíµ –ü—Ä–æ–¥–∞—Ç–∏':
        goodsChapter(message)
    elif message.text == '‚ùì–Ø–∫ –≤—Å–µ –ø—Ä–∞—Ü—é—î‚ùì':
        settingsChapter(message)
    elif message.text == 'üß≥ –ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üß≥':
        my_items(message)
    elif message.text == 'üë• –ü—Ä–æ –Ω–∞—Å üë•':
        infoChapter(message)
    elif message.text == '–û—Ä–µ—Å—Ç –ª–æ—Ö':
        OrestLoh(message)
    elif message.text == "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ü—ñ–Ω—É":
        handle_send_price(message)
    elif message.text=="–ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å":
        handle_find_order(message)
    elif message.text=="–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É":
        send_broadcast_message(message)
    elif message.text == "‚úÖ –†–µ—á—ñ —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ ‚úÖ":
        handle_buying_items(message)
    elif message.text == "‚úÖ –Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ":
         check_and_update_status(message)
    elif message.text=="–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å":
        adminPanel(message)
    elif message.text == '‚ùì–Ø–∫ –º–∏ –æ—Ü—ñ–Ω—é—î–º–æ —Ç–æ–≤–∞—Ä‚ùì':
        OtsinkaTovaru(message)







    elif message.text == 'üì∑ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ üì∏':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton('‚úÖ –Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ')
        # markup.row(button2)
        # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
        markup.row(button2, button3)

        global last_order_number
        last_order_number = None
        sentPhotoChapter(message)

        @bot.message_handler(content_types='photo')
        def get_photo(message):
            conn = sqlite3.connect('photos.db')
            cursor = conn.cursor()

            # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
            cursor.execute('''
                           CREATE TABLE IF NOT EXISTS photos (
                               id INTEGER PRIMARY KEY AUTOINCREMENT,
                               user_id INTEGER,
                               file BLOB,
                               order_number INTEGER,
                               price INTEGER,
                               status INTEGER,
                               delivery TEXT,
                               date_order DATETIME,
                               nomer_ttn INTEGER,
                               nomer_card INTEGER,
                               price_status TEXT
                           )
                       ''')
            conn.commit()

            if message.photo:
                # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                user_id = message.from_user.id

                # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                photo = message.photo[-1]

                # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
                file_info = bot.get_file(photo.file_id)
                file = bot.download_file(file_info.file_path)

                # –ö–æ–¥—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –≤ base64
                encoded_photo = base64.b64encode(file)

                global last_order_number

                # –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–µ —Ñ–æ—Ç–æ –∞–±–æ –∫–Ω–æ–ø–∫–∞ "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ" –±—É–ª–∞ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                if last_order_number is None or message.text == 'üì∑ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ üì∏':
                    # –û–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
                    cursor.execute('SELECT MAX(order_number) FROM photos')
                    result = cursor.fetchone()[0]
                    if result is None:
                        last_order_number = 1
                    else:
                        last_order_number = int(result) + 1

                status = 8  # –ó–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É 8

                cursor.execute(
                    'INSERT INTO photos (user_id, file, order_number, price, status, delivery, nomer_ttn,price_status) '
                    'VALUES (?, ?, ?, ?, ?, ?,  ?,?)',
                    (user_id, encoded_photo, last_order_number, None, status, None, None,None))
                conn.commit()
                conn.commit()

                order_message = f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.from_user.username} –∑ —ñ–¥ `{message.chat.id}` —Ö–æ—á–µ –ø—Ä–æ–¥–∞—Ç–∏ —Ä—ñ—á\n" \
                                f"–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {last_order_number}"
                bot.send_message(chat_id='-917631518', text=order_message,parse_mode='MarkdownV2')


                # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –¥–æ –≥—Ä—É–ø–∏
                bot.send_photo(chat_id='-917631518', photo=photo.file_id)

            cursor.close()
            conn.close()













    elif message.text == '‚úèÔ∏è –ó–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ ‚úèÔ∏è':
        # –°—é–¥–∞ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é —Å—Å—ã–ª–∫—É –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º–º, —Ç–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –ø–µ—Ä–µ–∫–∏–¥—ã–≤–∞—Ç—å –∫ –≤–∞–º –≤ –ª–∏—á–∫—É
        # webbrowser.open('https://t.me/sndskup')
        username = '@sndskup'  # –ó–∞–º—ñ–Ω—ñ—Ç—å <user_id> –Ω–∞ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        profile_link = f'{username}'
        bot.send_message(chat_id=message.chat.id, text='–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è, —â–æ–± –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:',
                         disable_web_page_preview=True)
        bot.send_message(chat_id=message.chat.id, text=profile_link)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        goodsChapter(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é':
        welcome(message)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –±–æ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–¥–∏–Ω –∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞
    # –î–æ–±–∞–≤–ª—è—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –º–æ–∂–Ω–æ –≤ —Å–ø–∏—Å–∫–µ answers
    else:
        bot.send_message(message.chat.id, answers[random.randint(0, 3)])




def check_and_update_status(message):
    user_id = message.from_user.id

    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()

    # –í–∏–±—ñ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    cursor.execute('''
            SELECT status, order_number
            FROM photos
            WHERE user_id = ?
            ORDER BY id DESC
            LIMIT 1
        ''', (user_id,))

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –∑–∞–ø–∏—Ç—É
    row = cursor.fetchone()

    if row is not None:
        status, order_number = row
        if status == 8:
            cursor.execute('UPDATE photos SET status = 9 WHERE order_number = ? AND user_id = ?',
                           ( order_number, message.from_user.id))
            conn.commit()

            conn.commit()  # –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
            markup.row(button2)

            bot.send_message(message.chat.id, '‚úÖ –¢–≤–æ—ó —Ñ–æ—Ç–æ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ üòå\n\n'
                                              'üìç–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É –ø–µ—Ä–µ–π–¥–∏ –¥–æ —Ä–æ–∑–¥—ñ–ª—É "–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è".\n\n'
                                              'üìç–û–¥–∏–Ω –∑ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —Ä–æ–∑–≥–ª—è–Ω–µ —Ç–≤–æ—é –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î —Ç–æ–±—ñ –Ω–∞–π–∫—Ä–∞—â—É —Ü—ñ–Ω—É, —Ä–æ–±–ª—è—á–∏ —Ü–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ üöÄ',
                             reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–£–ü–°.... –¢–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π!')
    else:
        bot.send_message(message.chat.id, '–£–ü–°.... –¢–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π!')

    conn.close()
def check_photos(message):
    penultimate_message = message.history[-2]
    if penultimate_message.photo:
        bot.send_message(message.chat.id, 'Thanks, I received your photos.')
    else:
        bot.send_message(message.chat.id, 'Please send me your photos first.')
def check_for_photos2(message):
  """Check if a message contains photos.

  Args:
    message: The Telegram message to check.

  Returns:
    A string, "Yes" if the message contains photos, "No" if the message does not contain photos.

  """

  bot.send_message(message.chat.id, message.text)
  if message.photo:
      bot.send_message(message.chat.id, '+" ')
  else:
      bot.send_message(message.chat.id, '-" ')


def adminPanel(message):
    if message.chat.id == allowed_user_id or message.chat.id==5792353056:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton('–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ü—ñ–Ω—É')
        button2 = types.KeyboardButton('–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É')
        button3 = types.KeyboardButton('–ü–æ—à—É–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å')
        button4 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
        markup.row(button1, button2)
        markup.row(button3)
        markup.row(button4)
        bot.send_message(message.chat.id, '–¢–∏ –ø–µ—Ä–µ–π—à–æ–≤ —É —Ä–æ–∑–¥—ñ–ª –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å', reply_markup=markup)


def goodsChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('‚úÖ –†–µ—á—ñ —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ ‚úÖ')
    button2 = types.KeyboardButton('üì∑ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ üì∏')
    button3 = types.KeyboardButton('‚ùì–Ø–∫ –º–∏ –æ—Ü—ñ–Ω—é—î–º–æ —Ç–æ–≤–∞—Ä‚ùì')
    button4 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
    markup.row(button1)
    markup.row(button2)
    markup.row(button3)
    markup.row(button4)
    bot.send_message(message.chat.id, '–¢–∏ –ø–µ—Ä–µ–π—à–æ–≤ —É —Ä–æ–∑–¥—ñ–ª "–ü—Ä–æ–¥–∞—Ç–∏ —Ä—ñ—á" ', reply_markup=markup)


last_messages = []





def send_previous_message(message):
    previous_message = message.get_message(-2)
    bot.send_message(message.chat.id, previous_message.text)
def settingsChapter(message):
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # button3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
    # markup.row(button3)
    bot.send_message(message.chat.id, '–ù–∞—Ç–∏—Å–Ω–∏ "–ü—Ä–æ–¥–∞—Ç–∏" ‚û°Ô∏è¬†‚Äù–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ‚Äù —Ç–∞ –Ω–∞–¥—ñ—à–ª–∏ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ñ–æ—Ç–æ —Å–≤–æ—î—ó —Ä–µ—á—ñ.\n\n'
                                      'üöÄ¬†–ù–∞—à—ñ –∫–æ–ª–µ–≥–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–æ–∑–≥–ª—è–Ω—É—Ç—å —Ç–≤–æ—é –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—é—Ç—å –Ω–∞–π–∫—Ä–∞—â—É –º–æ–∂–ª–∏–≤—É —Ü—ñ–Ω—É.\n\n'
                                      'üëÄ –£ —Ä–æ–∑–¥—ñ–ª—ñ "–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" –∑–º–æ–∂–µ—à –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–≤–æ—î—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó.\n\n'
                                      'üí≥ –Ø–∫—â–æ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ —Ü—ñ–Ω–∞ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å, –æ–±–µ—Ä–∏ –∑—Ä—É—á–Ω–∏–π —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏:\n'
                                      '  - –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É\n'
                                      '  - –î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º\n'
                                      '  - –î–æ—Å—Ç–∞–≤–∫–∞ –∑ –ø–æ–≤–Ω–æ—é –æ–ø–ª–∞—Ç–æ—é –Ω–∞ –∫–∞—Ä—Ç—É (–≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ)\n\n'
                                      'üì¶ –ü—ñ—Å–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É, –Ω–∞–¥–∞–π –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó, –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏ (—É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ —Ç–∏ –æ–±—Ä–∞–≤ –¥–æ—Å—Ç–∞–≤–∫—É —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É) –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏:  ‚Äú–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è‚Äù ‚û°Ô∏è ‚Äú–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏‚Äù ‚Äú–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó‚Äù.\n\n'
                                      'üí∞–ú–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø–µ—Ä–µ—Ä–∞—Ö—É—î–º–æ –∫–æ—à—Ç–∏ –Ω–∞ —Ç–≤–æ—é –∫–∞—Ä—Ç—É –ø—ñ—Å–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É.')

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
def check_photos(update, context):
    message = update.message

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    if message.photo:
        # –Ø–∫—â–æ —î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó, –º–æ–∂–µ–º–æ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –æ–±—Ä–æ–±–∫—É
        # –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –≤–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
        # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ó—Ö, –≤–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–∏—Ç–∞–Ω—å —Ç–æ—â–æ
        pass
    else:
        # –Ø–∫—â–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –Ω–µ–º–∞—î, –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
        message.reply_text("–¢–∏ –ø–æ–≤–∏–Ω–µ–Ω –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é —Å–≤–æ—ó—Ö —Ä–µ—á–µ–π, —â–æ–± –ø—Ä–æ–¥–∞—Ç–∏ —ó—ó –≤ –º–∞–≥–∞–∑–∏–Ω—ñ.")

def check_photos_sent(user_id):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —á–∞—Å
    current_time = datetime.datetime.now()

    # –û—Ç—Ä–∏–º—É—î–º–æ —á–∞—Å, —è–∫–∏–π –±—É–≤ 30 —Å–µ–∫—É–Ω–¥ —Ç–æ–º—É
    thirty_seconds_ago = current_time - datetime.timedelta(seconds=15)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó, —è–∫—ñ –±—É–ª–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –¥–ª—è –¥–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –ø—Ä–æ–º—ñ–∂–∫—É –≤—ñ–¥ thirty_seconds_ago –¥–æ current_time
    cursor.execute('SELECT COUNT(*) FROM photos WHERE user_id = ? AND datetime(date_order) >= datetime(?) AND datetime(date_order) <= datetime(?)',
                   (user_id, thirty_seconds_ago, current_time))
    result = cursor.fetchone()[0]
    conn.close()

    return result > 0

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ"




# def check_photos_in_previous_message(update: Update, context: CallbackContext):
#     # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
#     def check_photos():
#         # –û—Ç—Ä–∏–º—É—î–º–æ –æ–±'—î–∫—Ç –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
#         previous_message = update.effective_message.reply_to_message
#
#         # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó —É –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
#         if previous_message and (previous_message.photo or previous_message.document):
#             update.message.reply_text("–í–∏ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ —Ñ–æ—Ç–æ —É –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ.")
#         else:
#             update.message.reply_text("–í–∏ –Ω–µ –Ω–∞–¥—Å–∏–ª–∞–ª–∏ —Ñ–æ—Ç–æ —É –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ.")
#
#     # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
#     context.job_queue.run_once(check_photos, 2)
#

# def check_photos_command(update: Update, context: CallbackContext):
#     # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é check_photos_in_previous_message
#     check_photos_in_previous_message(update, context)
#
# # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ "/check_photos"

# def check_photos(message):
#     time.sleep(2)
#
#     # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º—ñ—Å—Ç–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
#     if message.photo:
#         return True
#     else:
#         return False

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start –∞–±–æ –±—É–¥—å-—è–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@bot.message_handler(commands=['start', 'help', 'anything'])
@bot.message_handler(func=lambda message: True, content_types=['text'])
def handle_message(message):
    time.sleep(2)

    if not check_photos(message):
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ, —è–∫—â–æ –Ω–µ–º–∞—î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
        bot.send_message(message.chat.id, "–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó —Ä–µ—á–µ–π, —è–∫—ñ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç–∏.")
    else:
        # –¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –æ–±—Ä–æ–±–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—è–º–∏
        # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä–µ–≥—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ —â–æ—Å—å —ñ–Ω—à–µ
        bot.send_message(message.chat.id, "–î—è–∫—É—é! –í–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó. –¢–µ–ø–µ—Ä –º–æ–∂–µ–º–æ –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏.")

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ"


# @bot.message_handler(func=lambda message: message.text == '–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ')
# def handle_all_photos_sent(message):
#     user_id = message.from_user.id
#
#     # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
#     photos_sent = check_photos_sent(user_id)
#
#     if photos_sent:
#      send_all_photos(message)
#     else:
#         bot.send_message(chat_id=message.chat.id, text="–í–∏–±–∞—á—Ç–µ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!")
#         sentPhotoChapter(message)
#         global last_order_number
#         last_order_number = None
#
#         @bot.message_handler(content_types='photo')
#         def get_photo(message):
#             conn = sqlite3.connect('photos.db')
#             cursor = conn.cursor()
#
#             # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π, —è–∫—â–æ –≤–æ–Ω–∞ —â–µ –Ω–µ —ñ—Å–Ω—É—î
#             cursor.execute('''
#                         CREATE TABLE IF NOT EXISTS photos (
#                             id INTEGER PRIMARY KEY AUTOINCREMENT,
#                             user_id INTEGER,
#                             file BLOB,
#                             order_number INTEGER,
#                             price INTEGER,
#                             status INTEGER,
#                             delivery TEXT,
#                             date_order DATETIME,
#                             nomer_ttn INTEGER
#                         )
#                     ''')
#             conn.commit()
#
#             if message.photo:
#                 # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
#                 user_id = message.from_user.id
#
#                 # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
#                 photo = message.photo[-1]
#
#                 # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–∞–π–ª—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
#                 file_info = bot.get_file(photo.file_id)
#                 file = bot.download_file(file_info.file_path)
#
#                 # –ö–æ–¥—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –≤ base64
#                 encoded_photo = base64.b64encode(file)
#
#                 global last_order_number
#
#                 # –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–µ —Ñ–æ—Ç–æ –∞–±–æ –∫–Ω–æ–ø–∫–∞ "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ" –±—É–ª–∞ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#                 if last_order_number is None or message.text == '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ —Ä–µ—á–µ–π':
#                     # –û–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#                     cursor.execute('SELECT MAX(order_number) FROM photos')
#                     result = cursor.fetchone()[0]
#                     if result is None:
#                         last_order_number = 1
#                     else:
#                         last_order_number = int(result) + 1
#
#                 # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö –∑ –Ω–æ–º–µ—Ä–æ–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é —ñ —á–∞—Å–æ–º
#                 current_datetime = datetime.datetime.now()
#                 cursor.execute('INSERT INTO photos (user_id, file, order_number, date_order) VALUES (?, ?, ?, ?)',
#                                (user_id, encoded_photo, last_order_number, current_datetime))
#                 conn.commit()
#
#                 # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –≥—Ä—É–ø–∏
#                 order_message = f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.from_user.username} —Ö–æ—á–µ –ø—Ä–æ–¥–∞—Ç–∏ —Ä—ñ—á\n" \
#                                 f"–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{last_order_number}"
#                 bot.send_message(chat_id='-917631518', text=order_message)
#
#                 # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –¥–æ –≥—Ä—É–ø–∏
#                 bot.send_photo(chat_id='-917631518', photo=photo.file_id)
#
#             cursor.close()
#             conn.close()
# # –§—É–Ω–∫—Ü–∏—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Ä–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏
def sentPhotoChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button2 = types.KeyboardButton('‚úÖ –Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ')
    markup.row(button2)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button3 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
    markup.row(button2,button3)
    bot.send_message(message.chat.id, '''üìç¬†–í—ñ–¥–ø—Ä–∞–≤ –Ω–∞–º –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ–æ—Ç–æ:

1Ô∏è‚É£ –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É (—Ä–µ—á—ñ) *–∑–∑–∞–¥—É —Ç–∞ —Å–ø–µ—Ä–µ–¥—É*.

2Ô∏è‚É£ –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ *–≤–µ—Ä—Ö–Ω—ñ—Ö –±–∏—Ä–æ–∫.*

3Ô∏è‚É£ –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ *–Ω–∏–∂–Ω—ñ—Ö –±–∏—Ä–æ–∫* (—è–∫—â–æ —Ç–∞–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ).

4Ô∏è‚É£ –ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ *–Ω–µ–¥–æ–ª—ñ–∫—ñ–≤.*

5Ô∏è‚É£ –ü—ñ—Å–ª—è —Ç–æ–≥–æ *—è–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–≤ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ñ–æ—Ç–æ*, –Ω–∞—Ç–∏—Å–Ω–∏ ‚Äú‚úÖ¬†–Ø –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ —É—Å—ñ —Ñ–æ—Ç–æ‚Äù.''', parse_mode='Markdown')

    text = "*‚ÄºÔ∏è–í—ñ–¥–ø—Ä–∞–≤–ª—è–π—Ç–µ –ª–∏—à–µ –ø—Ä–∞–≤–¥–∏–≤—ñ —Ñ–æ—Ç–æ —Ç–∞ –≤—Å—ñ –Ω–µ–¥–æ–ª—ñ–∫–∏‚ÄºÔ∏è*\n–ù–µ –≥–∞–π—Ç–µ –Ω—ñ –Ω–∞—à–æ–≥–æ, –Ω—ñ –≤–∞—à–æ–≥–æ —á–∞—Å—É. –ö–æ–∂–Ω–∞ —Ä—ñ—á –±—É–¥–µ —Ä–µ—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞ –Ω–∞ –ø–æ—à—Ç—ñ."


    bot.send_message(message.chat.id, text,reply_markup=markup,parse_mode='Markdown')




        # def info2Chapter(message):


#     user_id = message.from_user.id
#
#
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
#     markup.row( button2)
#
#     bot.send_message(message.chat.id, '‚úÖ –í–∞—à—ñ —Ñ–æ—Ç–æ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ üòå\n\n'
#                                       'üìç–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ —Ä–æ–∑–¥—ñ–ª—É "–ú–æ—ó —Ä–µ—á—ñ".\n\n'
#                                       'üìç–û–¥–∏–Ω –∑ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —Ä–æ–∑–≥–ª—è–Ω–µ –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –≤–∞–º –Ω–∞–π–∫—Ä–∞—â—É —Ü—ñ–Ω—É, —Ä–æ–±–ª—è—á–∏ —Ü–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ üöÄ',
#                      reply_markup=markup)
def infoChapter(message):
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
    # markup.row( button2)
    word1 = "  "
    bot.send_message(message.chat.id, f'''        
        {word1}–ü—Ä–æ –Ω–∞—Å üôÉ

–ú–∏ - –∫–æ–º–∞–Ω–¥–∞ –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤, —è–∫—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –Ω–∞ —Å–∫—É–ø—Ü—ñ —Ä—ñ–∑–Ω–æ–≥–æ "–≤—ñ–Ω—Ç–∞–∂–Ω–æ–≥–æ" —Ç–∞ "–∫–µ–∂—É–∞–ª—å–Ω–æ–≥–æ" —à–º–æ—Ç—É. –ù–∞—à–∞ –º–µ—Ç–∞ - –Ω–∞–¥–∞—Ç–∏ –≤–∞–º –∑—Ä—É—á–Ω—É —Ç–∞ –≤–∏–≥—ñ–¥–Ω—É –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø—Ä–æ–¥–∞—Ç–∏ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ä–µ—á—ñ —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞ –Ω–∏—Ö —Ä–µ–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å. üí∞

–ß–æ–º—É –æ–±—Ä–∞—Ç–∏ –Ω–∞—Å? üåü

1Ô∏è‚É£ *–®–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä —Ä–µ—á–µ–π:* –ú–∏ –ø—Ä–∏–π–º–∞—î–º–æ –¥–æ —Ä–æ–∑–≥–ª—è–¥—É —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω—ñ –≤–∏–¥–∏ –æ–¥—è–≥—É, –≤–∫–ª—é—á–∞—é—á–∏ –≤–µ—Ä—Ö–Ω—ñ–π –æ–¥—è–≥, —à—Ç–∞–Ω–∏, —ñ–Ω–∫–æ–ª–∏ –≤–∑—É—Ç—Ç—è, –∞–∫—Å–µ—Å—É–∞—Ä–∏ —Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ. üëïüëñüëü

2Ô∏è‚É£ *–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞ –æ—Ü—ñ–Ω–∫–∞:* –ú–∏ —Ü—ñ–Ω—É—î–º–æ –≤–∞—à—ñ —Ç–æ–≤–∞—Ä–∏ —ñ —Ä–µ—Ç–µ–ª—å–Ω–æ –æ—Ü—ñ–Ω—é—î–º–æ —ó—Ö, –≤—Ä–∞—Ö–æ–≤—É—é—á–∏ –±—Ä–µ–Ω–¥, —Å—Ç–∞–Ω —Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—å. –ù–∞—à—ñ –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª–∏ –≥–∞—Ä–∞–Ω—Ç—É—é—Ç—å —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥–ª—è –≤–∞—à–∏—Ö —Ä–µ—á–µ–π. üíéüìà

3Ô∏è‚É£ *–ü—Ä–æ—Å—Ç–∏–π –ø—Ä–æ—Ü–µ—Å –ø—Ä–æ–¥–∞–∂—É:* –ú–∏ –∑—Ä–æ–±–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å –ø—Ä–æ–¥–∞–∂—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∏–º —ñ –∑—Ä—É—á–Ω–∏–º –¥–ª—è –≤–∞—Å. –í–∏ –Ω–∞–¥—Å–∏–ª–∞—î—Ç–µ –Ω–∞–º —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É, –æ—Ç—Ä–∏–º—É—î—Ç–µ –æ—Ü—ñ–Ω–∫—É, –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—è –∑ —Ü—ñ–Ω–æ—é —Ç–∞ –æ–±–∏—Ä–∞—î—Ç–µ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏. –ú–∏ —Å—Ç–µ–∂–∏–º–æ –∑–∞ –∫–æ–∂–Ω–∏–º –∫—Ä–æ–∫–æ–º, —â–æ–± –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≥–∞—Ä–Ω—É –≤–∑–∞—î–º–æ–≤–∏–≥—ñ–¥–Ω—É —É–≥–æ–¥—É. üì∏‚úÖüöö

4Ô∏è‚É£ *–ù–∞–¥—ñ–π–Ω–∞ —Ç–∞ —à–≤–∏–¥–∫–∞ –æ–ø–ª–∞—Ç–∞:* –ü—ñ—Å–ª—è –ø—Ä–∏–π–Ω—è—Ç—Ç—è –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —É–≥–æ–¥–∏, –º–∏ —à–≤–∏–¥–∫–æ –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î–º–æ –≥—Ä–æ—à—ñ –Ω–∞ –≤–∞—à —Ä–∞—Ö—É–Ω–æ–∫. –ú–∏ —Ä–æ–∑—É–º—ñ—î–º–æ, —â–æ —á–∞—Å - —Ü—ñ–Ω–Ω–∏–π —Ä–µ—Å—É—Ä—Å, —Ç–æ–º—É –º–∏ —Ä–æ–±–∏–º–æ –≤—Å–µ –º–æ–∂–ª–∏–≤–µ, —â–æ–± –æ–ø–ª–∞—Ç–∞ –±—É–ª–∞ –∑–¥—ñ–π—Å–Ω–µ–Ω–∞ —à–≤–∏–¥–∫–æ —Ç–∞ –Ω–∞–¥—ñ–π–Ω–æ. üí∏‚è±Ô∏è

–ú–∏ –ø–∏—à–∞—î–º–æ—Å—è –Ω–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤, —è–∫–∞ –∑–æ—Å–µ—Ä–µ–¥–∂–µ–Ω–∞ –Ω–∞ –≤–∞—à–æ–º—É –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—ñ —Ç–∞ –≤–ø–µ–≤–Ω–µ–Ω–∞, —â–æ –∑–∞–±–µ–∑–ø–µ—á–∏—Ç—å –≤–∞–º –∑—Ä—É—á–Ω–∏–π —Ç–∞ –≤–∏–≥—ñ–¥–Ω–∏–π –¥–æ—Å–≤—ñ–¥ –ø—Ä–æ–¥–∞–∂—É. –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ —ñ –¥–∞–≤–∞–π—Ç–µ —Ä–∞–∑–æ–º –∑–Ω–∞–π–¥–µ–º–æ –Ω–æ–≤–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–æ–≥–æ –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–æ–≥–æ –æ–¥—è–≥—É! üíº''',
                     parse_mode='Markdown')


# def info2Chapter(message):
#     user_id = message.from_user.id
#
#
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
#     markup.row( button2)
#
#     bot.send_message(message.chat.id, '‚úÖ –í–∞—à—ñ —Ñ–æ—Ç–æ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ üòå\n\n'
#                                       'üìç–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ —Ä–æ–∑–¥—ñ–ª—É "–ú–æ—ó —Ä–µ—á—ñ".\n\n'
#                                       'üìç–û–¥–∏–Ω –∑ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —Ä–æ–∑–≥–ª—è–Ω–µ –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –≤–∞–º –Ω–∞–π–∫—Ä–∞—â—É —Ü—ñ–Ω—É, —Ä–æ–±–ª—è—á–∏ —Ü–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ üöÄ',
#                      reply_markup=markup)

# def check_previous_photo(update: Update, context: CallbackContext):
#     message = update.message  # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
#     photos = message.photo  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
#
#     if not photos:
#         message.reply_text('–í–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∂–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ!')
#     else:
#         # –í–∏–∫–æ–Ω—É—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥—ñ—ó, —è–∫—â–æ —Ñ–æ—Ç–æ –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ
#         info2Chapter(message)

# def handle_message(update: Update, context: CallbackContext):
#     check_previous_photo(update, context)
# def send_all_photos(message):
#     conn = sqlite3.connect('photos.db')
#     cursor = conn.cursor()
#
#     # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#     cursor.execute('SELECT MAX(order_number) FROM photos')
#     result = cursor.fetchone()[0]
#     if result is None:
#         last_order_number = 1
#     else:
#         last_order_number = int(result)
#
#     # –í–∏–±—ñ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–ª—è –ø–µ–≤–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#     cursor.execute('SELECT file FROM photos WHERE order_number = ?', (last_order_number,))
#     photo_records = cursor.fetchall()
#
#     if photo_records:
#         for photo_record in photo_records:
#             encoded_photo = photo_record[0]
#             photo_data = base64.b64decode(encoded_photo)
#
#             # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–æ –≥—Ä—É–ø–∏
#             bot.send_photo(chat_id='-917631518', photo=io.BytesIO(photo_data))
#
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
#         markup.row(button2)
#
#         bot.send_message(message.chat.id, '‚úÖ –í–∞—à—ñ —Ñ–æ—Ç–æ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ üòå\n\n'
#                                           'üìç–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É –ø–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ —Ä–æ–∑–¥—ñ–ª—É "–ú–æ—ó —Ä–µ—á—ñ".\n\n'
#                                           'üìç–û–¥–∏–Ω –∑ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —Ä–æ–∑–≥–ª—è–Ω–µ –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –≤–∞–º –Ω–∞–π–∫—Ä–∞—â—É —Ü—ñ–Ω—É, —Ä–æ–±–ª—è—á–∏ —Ü–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ üöÄ',
#                          reply_markup=markup)
#     else:
#         bot.send_message(message.chat.id, '–í–∏ –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∂–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ!')
#
#     cursor.close()
#     conn.close()


def send_all_photos(message):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    cursor.execute('SELECT MAX(order_number) FROM photos')
    result = cursor.fetchone()[0]
    if result is None:
        last_order_number = 1
    else:
        last_order_number = int(result)

    # –í–∏–±—ñ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–ª—è –ø–µ–≤–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    cursor.execute('SELECT file FROM photos WHERE order_number = ?', (last_order_number,))
    photo_records = cursor.fetchall()

    if len(photo_records) > 0:
        for photo_record in photo_records:
            encoded_photo = photo_record[0]
            photo_data = base64.b64decode(encoded_photo)

            # –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–æ –≥—Ä—É–ø–∏
            # bot.send_photo(chat_id='-917631518', photo=io.BytesIO(photo_data))

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é')
        markup.row(button2)

        bot.send_message(message.chat.id, '‚úÖ –í–∞—à—ñ —Ñ–æ—Ç–æ –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ üòå\n\n'
                                          'üìç–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –ø–µ—Ä–µ–π–¥–∏ –¥–æ —Ä–æ–∑–¥—ñ–ª—É "–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è".\n\n'
                                          'üìç–û–¥–∏–Ω –∑ –Ω–∞—à–∏—Ö –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ —Ä–æ–∑–≥–ª—è–Ω–µ –≤–∞—à—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É—î –≤–∞–º –Ω–∞–π–∫—Ä–∞—â—É —Ü—ñ–Ω—É, —Ä–æ–±–ª—è—á–∏ —Ü–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–≤–∏–¥–∫–æ üöÄ',
                         reply_markup=markup)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton('–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ')
        markup.row(button1)

        bot.send_message(message.chat.id, '–í–∏ –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ –∂–æ–¥–Ω–æ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó! –ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ.',
                         reply_markup=markup)

    cursor.close()
    conn.close()


def OrestLoh(message):
    bot.send_message(message.chat.id, '–¢–∞–∫ —è –∑ –≤–∞–º–∏ –∑–≥–æ–¥–µ–Ω,—â–æ –û—Ä–µ—Å—Ç –õ–æ—Ö, –∞ —Ç–∞–∫–æ–∂ –≤—ñ–Ω –ú–ê–í–ü–ê!')


def OtsinkaTovaru(message):
    text2 = "‚Äº*–Ø–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ—Ü—ñ–Ω–∫–∞ —Ç–æ–≤–∞—Ä—É?  ü§î*\n\n" \
            "–ü—Ä–∏ –æ—Ü—ñ–Ω—Ü—ñ –≤–∞—à–æ–≥–æ —Ç–æ–≤–∞—Ä—É –º–∏ –∑–≤–µ—Ä—Ç–∞—î–º–æ —É–≤–∞–≥—É –Ω–∞ —Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ–∞–∫—Ç–æ—Ä–∏:\n\n" \
            "1. *–§—ñ—Ä–º–∞ (–º–æ–¥–µ–ª—å):* –û–¥–∏–Ω –∑ –∫–ª—é—á–æ–≤–∏—Ö –∞—Å–ø–µ–∫—Ç—ñ–≤ - —Ü–µ –±—Ä–µ–Ω–¥ —Ç–∞ –º–æ–¥–µ–ª—å —Ç–æ–≤–∞—Ä—É. –í—ñ–¥–æ–º—ñ —Ñ—ñ—Ä–º–∏ —Ç–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ –º–æ–¥–µ–ª—ñ –∑–∞–∑–≤–∏—á–∞–π –º–∞—é—Ç—å –±—ñ–ª—å—à—É –≤–∞—Ä—Ç—ñ—Å—Ç—å. –Ø–∫—â–æ –≤–∞—à —Ç–æ–≤–∞—Ä –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ –≤—ñ–¥–æ–º–æ—ó —Ñ—ñ—Ä–º–∏ –∞–±–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—ó –º–æ–¥–µ–ª—ñ, —Ü–µ –≤–ø–ª–∏–Ω–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ –Ω–∞ –æ—Ü—ñ–Ω–∫—É. üëç\n\n" \
            "2. *–†–æ–∑–º—ñ—Ä:* –†–æ–∑–º—ñ—Ä —Ç–æ–≤–∞—Ä—É —Ç–∞–∫–æ–∂ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –ø—Ä–∏ –æ—Ü—ñ–Ω—Ü—ñ. –î–µ—è–∫—ñ —Ä–æ–∑–º—ñ—Ä–∏ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –±—ñ–ª—å—à –ø–æ–ø—É–ª—è—Ä–Ω–∏–º–∏ –∞–±–æ —Ä—ñ–¥–∫—ñ—Å–Ω–∏–º–∏, —â–æ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —ó—Ö–Ω—é —Ü—ñ–Ω—É. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —Ä–æ–∑–º—ñ—Ä, —è–∫–∏–π –≤–∞–∂–∫–æ –∑–Ω–∞–π—Ç–∏ –∞–±–æ –¥—É–∂–µ –ø–æ–ø—É–ª—è—Ä–Ω–∏–π, –º–æ–∂–µ –º–∞—Ç–∏ –≤–∏—â—É —Ü—ñ–Ω—É –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑—ñ –∑–≤–∏—á–∞–π–Ω–∏–º–∏ —Ä–æ–∑–º—ñ—Ä–∞–º–∏. üìè\n\n" \
            "3. *–°—Ç–∞–Ω:* –°—Ç–∞–Ω —Ç–æ–≤–∞—Ä—É —î –≤–∞–∂–ª–∏–≤–∏–º —á–∏–Ω–Ω–∏–∫–æ–º –≤ –æ—Ü—ñ–Ω—Ü—ñ. –ß–∏–º –∫—Ä–∞—â–∏–π —Å—Ç–∞–Ω —Ç–æ–≤–∞—Ä—É, —Ç–∏–º –±—ñ–ª—å—à–∞ –π–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å, —â–æ –π–æ–≥–æ –æ—Ü—ñ–Ω—è—Ç—å –≤–∏—â–µ. –¢–æ–≤–∞—Ä–∏ —É –≤—ñ–¥–º—ñ–Ω–Ω–æ–º—É —Å—Ç–∞–Ω—ñ, –º–∞–π–∂–µ –Ω–æ–≤—ñ –∞–±–æ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ –æ–∑–Ω–∞–∫–∞–º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è, –∑–∞–∑–≤–∏—á–∞–π –º–∞—é—Ç—å –≤–∏—â—É –æ—Ü—ñ–Ω–∫—É. üòä\n\n" \
            "" \
            "*‚ÄºÔ∏è¬†–ó–≤–µ—Ä–Ω—ñ—Ç—å —Å–≤–æ—é —É–≤–∞–≥—É –Ω–∞ —Ä–æ–∑–¥—ñ–ª ‚Äú–†–µ—á—ñ —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ‚Äù‚ÄºÔ∏è* \n" \
            "(‚Äù–ü—Ä–æ–¥–∞—Ç–∏‚Äù ‚û°Ô∏è ‚Äù–†–µ—á—ñ —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ‚Äù), —É —Ü—å–æ–º—É —Ä–æ–∑–¥—ñ–ª—ñ –≤–∏ –∑–º–æ–∂–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Ä–µ—á—ñ —è–∫—ñ –º–∏ —Å–∫—É–ø–æ–≤—É—î–º–æ –∑ –Ω–∞–π–≤–∏—â–∏–º –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º, –Ω–∞ —Ç–æ–π —á–∏ —ñ–Ω—à–∏–π —á–∞—Å." \
            "" \
            ""
    bot.send_message(message.chat.id, text2 ,parse_mode='Markdown')


# @bot.message_handler(commands=['send_photos'])
# def sendPhotoToGroup(message):
#     user_id = message.from_user.id
#
#     # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
#     cursor.execute('SELECT file FROM photos WHERE user_id = ?', (user_id,))
#     photo_records = cursor.fetchall()
#
#     if len(photo_records) > 0:
#         photos = []
#         for record in photo_records:
#             # –†–æ–∑–∫–æ–¥—É–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –∑ base64
#             encoded_photo = record[0]
#             photo_data = base64.b64decode(encoded_photo)
#             photos.append(BytesIO(photo_data))
#
#         # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤—Å—ñ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –≤ –æ–¥–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ
#         media_group = [types.InputMediaPhoto(media=photo) for photo in photos]
#         bot.send_media_group(chat_id='-917631518', media=media_group)
#     else:
#         bot.reply_to(message, '–ù–µ–º–∞—î —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è!')


# –°—Ç—Ä–æ—á–∫–∞, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª–∞—Å—å

@bot.message_handler(func=lambda message: message.text.startswith('–ú–æ—ó —Ä–µ—á—ñ'))
def my_items(message):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    user_id = message.from_user.id

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö order_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.execute('SELECT DISTINCT order_number FROM photos WHERE user_id = ?', (user_id,))
    order_numbers = cursor.fetchall()

    if order_numbers:
        for order_number in order_numbers:
            order_number = order_number[0]

            # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ order_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            cursor.execute('SELECT status, price, file, nomer_ttn,delivery, nomer_card FROM photos WHERE user_id = ? AND order_number = ?',
                           (user_id, order_number))
            status_record = cursor.fetchone()

            if status_record:
                status = status_record[0]
                price = status_record[1] if status_record[1] is not None else '–©–µ –Ω–µ–º–∞—î'
                photo_data = base64.b64decode(status_record[2])
                ttn_number = status_record[3] if status_record[3] is not None else '–©–µ –Ω–µ–º–∞—î'
                delivery_field=status_record[4] if status_record[4] is not None else '–©–µ –Ω–µ–º–∞—î'
                card_number=status_record[5] if status_record[5] is not None else '–©–µ –Ω–µ–º–∞—î'

                if status == 1:
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –±—É–ª–∞ –ø–æ–¥–∞–Ω–∞ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥ üòº\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}"
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                                   reply_markup=markup,parse_mode='Markdown')
                elif status == 2:
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ó–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏ —Ü—ñ–Ω–∞, –æ—á—ñ–∫—É—î –≤–∞—à–æ–≥–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è üëÄ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}"
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,parse_mode='Markdown')
                elif status == 3:
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –¶—ñ–Ω—É –±—É–ª–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ ‚úÖ\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}"
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                                    parse_mode='Markdown')
                elif status == 4 and delivery_field=='–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º':
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –¥–æ—Ä–æ–∑—ñ üì¶\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}"

                    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä –¢–¢–ù"
                    markup = types.InlineKeyboardMarkup()
                    ttn_button = types.InlineKeyboardButton("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó", callback_data=f"ttn_{order_number}")
                    markup.add(ttn_button)

                    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ –∫–Ω–æ–ø–∫–æ—é
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                                   reply_markup=markup,parse_mode='Markdown')
                elif status==4 and delivery_field=='–î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É':
                    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –æ–±'—î–∫—Ç—É markup —ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –Ω—å–æ–≥–æ –ø–µ—Ä—à–æ—ó –∫–Ω–æ–ø–∫–∏
                    markup = types.InlineKeyboardMarkup()
                    ttn_button = types.InlineKeyboardButton("–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó", callback_data=f"ttn_{order_number}")
                    markup.add(ttn_button)

                    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—Ä—É–≥–æ–≥–æ –æ–±'—î–∫—Ç—É markup —ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –Ω—å–æ–≥–æ –¥—Ä—É–≥–æ—ó –∫–Ω–æ–ø–∫–∏
                    ttn_button2 = types.InlineKeyboardButton('–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–∞—Ä—Ç–∏',callback_data=f"card_{order_number}")
                    markup.add(ttn_button2)

                    # –í–∞—à –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π caption
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –¥–æ—Ä–æ–∑—ñ üì¶\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏:* {card_number}"

                    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ –æ–±'—î–∫—Ç–æ–º markup
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                                   reply_markup=markup, parse_mode='Markdown')

                elif status==5 and delivery_field=='–î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É':
                    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –æ–±'—î–∫—Ç—É markup —ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –Ω—å–æ–≥–æ –ø–µ—Ä—à–æ—ó –∫–Ω–æ–ø–∫–∏
                    markup = types.InlineKeyboardMarkup()

                    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—Ä—É–≥–æ–≥–æ –æ–±'—î–∫—Ç—É markup —ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –Ω—å–æ–≥–æ –¥—Ä—É–≥–æ—ó –∫–Ω–æ–ø–∫–∏
                    ttn_button2 = types.InlineKeyboardButton('–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–∞—Ä—Ç–∏',callback_data=f"card_{order_number}")
                    markup.add(ttn_button2)

                    # –í–∞—à –ø—ñ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–π caption
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –¥–æ—Ä–æ–∑—ñ üì¶\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏:* {card_number}"

                    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ –æ–±'—î–∫—Ç–æ–º markup
                    bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                                   reply_markup=markup, parse_mode='Markdown')
                else:
                    caption = f"‚û°Ô∏è *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–°—Ç–∞—Ç—É—Å:* –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –±—É–ª–∞ –ø–æ–¥–∞–Ω–∞ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥ üòº\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\n‚û°Ô∏è *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}"

                    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ —Ñ–æ—Ç–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ order_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    cursor.execute('SELECT file FROM photos WHERE user_id = ? AND order_number = ? LIMIT 1',
                                   (user_id, order_number))
                    photo_record = cursor.fetchone()

                    if photo_record:
                        encoded_photo = photo_record[0]
                        photo_data = base64.b64decode(encoded_photo)

                        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ —Ç–∞ —Ç–µ–∫—Å—Ç–æ–º
                        bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,parse_mode='Markdown')
                    else:
                        bot.reply_to(message, f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –Ω–æ–º–µ—Ä–æ–º {order_number}")

            else:
                bot.reply_to(message, f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç—É—Å—É –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –Ω–æ–º–µ—Ä–æ–º {order_number}")
    else:
        bot.reply_to(message, f"–£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üòî. \n\nüìç–©–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω–∏:      \n‚Äù–ü—Ä–æ–¥–∞—Ç–∏‚Äù ‚û°Ô∏è ‚Äú–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ç–æ‚Äù.")


@bot.callback_query_handler(func=lambda call: call.data.startswith('ttn_'))
def handle_ttn_number(call):
    if get_ttn_status(current_order_number) is None:
        order_number = call.data.split('_')[1]
        bot.send_message(call.message.chat.id, '–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó\n               ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è')

        # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –æ–±—Ä–æ–±–ª—è—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        bot.register_next_step_handler(call.message, save_ttn_number, order_number)
    else:
        bot.send_message(call.message.chat.id, '–í–∏ —É–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–ª—è–ª–∏ –Ω–æ–º–µ—Ä –¢–¢–ù!')



def save_ttn_number(message, order_number):
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤–≤–µ–¥–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–æ–º–µ—Ä –¢–¢–ù
        if get_ttn_status(current_order_number) is None:

            ttn_number = message.text
            # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –¢–¢–ù —É –±–∞–∑—É –¥–∞–Ω–∏—Ö
            conn = sqlite3.connect('photos.db')
            cursor = conn.cursor()
            cursor.execute('UPDATE photos SET nomer_ttn = ?, status = 5 WHERE order_number = ? AND user_id = ?',
                           (ttn_number, order_number, message.from_user.id))
            conn.commit()
            conn.close()

            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            reply_text = f"–¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó –¢–¢–ù: {ttn_number}. –ù–æ–º–µ—Ä –¢–¢–ù –∑–±–µ—Ä–µ–∂–µ–Ω–æ."
            bot.send_message(message.chat.id, reply_text)
            bot.send_message(-917631518,
                             f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.chat.username} –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó {ttn_number}. –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: #{order_number}")
        else:
            bot.send_message(message.chat.id,
                             f"–ù–æ–º–µ—Ä –¢–¢–ù —É–∂–µ –±—É–ª–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ")




@bot.callback_query_handler(func=lambda call: call.data.startswith('card_'))
def handle_card_number(call):

    if get_card_status(current_order_number) is None:
        order_number = call.data.split('_')[1]
        bot.send_message(call.message.chat.id, '–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–æ—ó –∫–∞—Ä—Ç–∏\n '
                                               '                    ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è'
                         )

        # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –æ–±—Ä–æ–±–ª—è—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        bot.register_next_step_handler(call.message, save_card_number, order_number)
    else:
        bot.send_message(message.chat.id,
                         f"–¢–∏ —É–∂–µ –∑–±–µ—Ä—ñ–≥ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏!")


def save_card_number(message, order_number):

    # –û—Ç—Ä–∏–º—É—î–º–æ –≤–≤–µ–¥–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –Ω–æ–º–µ—Ä –¢–¢–ù
    if get_card_status(order_number) is None:

        card_number = message.text

        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ –¢–¢–ù —É –±–∞–∑—É –¥–∞–Ω–∏—Ö
        conn = sqlite3.connect('photos.db')
        cursor = conn.cursor()
        cursor.execute('UPDATE photos SET nomer_card = ?, status = 6 WHERE order_number = ? AND user_id = ?',
                       (card_number, order_number, message.from_user.id))
        conn.commit()
        conn.close()

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        reply_text = f"–¢–∏ –Ω–∞–¥—ñ—Å–ª–∞–≤ –Ω–æ–º–µ—Ä —Å–≤–æ—î—ó –∫–∞—Ä—Ç–∏: {card_number}. –ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ."
        bot.send_message(message.chat.id, reply_text)
        bot.send_message(-917631518,
                         f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á @{message.chat.username} –∑ —ñ–¥ `{message.chat.id}` –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ –Ω–æ–º–µ—Ä —Å–≤–æ—î—ó –∫–∞—Ä—Ç–∏: `{card_number}`\n–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {order_number}",
                         parse_mode="MarkdownV2")
    else:
        bot.send_message(message.chat.id,
                         f"–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏ —É–∂–µ –±—É–ª–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ")
# def process_order_number(message):
#     order_number = message.text
#
#     # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
#     conn = sqlite3.connect('photos.db')
#     cursor = conn.cursor()
#     cursor.execute('SELECT * FROM photos WHERE order_number = ?', (order_number,))
#     result = cursor.fetchone()
#
#     if result:
#         owner_id = result[1]  # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≤–ª–∞—Å–Ω–∏–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —î –≤ –¥—Ä—É–≥–æ–º—É —Å—Ç–æ–≤–ø—Ü—ñ
#         bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É')
#         bot.register_next_step_handler(message, lambda msg: process_price(msg, owner_id, order_number))
#     else:
#         bot.reply_to(message, '–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')
#
#     cursor.close()
#     conn.close()
#
#
# def process_price(message, owner_id, order_number):
#     price = message.text
#
#     # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ü—ñ–Ω—É –≤–ª–∞—Å–Ω–∏–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#     bot.send_message(owner_id, f"–¶—ñ–Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {price}  –≥—Ä–Ω")
#
#     # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ü—ñ–Ω–∏ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
#     conn = sqlite3.connect('photos.db')
#     cursor = conn.cursor()
#     cursor.execute('UPDATE photos SET status = 2, Price = ? WHERE order_number = ?', (price, order_number))
#     conn.commit()
#     cursor.close()
#     conn.close()
#
#     # –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –∑–º—ñ–Ω–Ω—É
#     global current_order_number
#     current_order_number = order_number
#
#     # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
#     markup = types.InlineKeyboardMarkup(row_width=2)
#     yes_button = types.InlineKeyboardButton('–¢–∞–∫', callback_data='yes')
#     no_button = types.InlineKeyboardButton('–ù—ñ', callback_data='no')
#     markup.add(yes_button, no_button)
#     bot.send_message(owner_id, '–ü–æ–¥–∂—É—î—Ç–µ—Å—è –∑ —Ü—ñ–Ω–æ—é?', reply_markup=markup)


# @bot.callback_query_handler(func=lambda call: call.data in ['cash_on_delivery', 'system_delivery'])
# def handle_delivery_callback(call):
#     if call.data == 'cash_on_delivery':
#         delivery_message = '''üöö –î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º
#
#             üìç –ü—Ä–∏ –æ–±—Ä–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –≤–∏–¥—É –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∏ –≤–∫–∞–∑—É—î—Ç–µ —Ü—ñ–Ω—É, —è–∫—É –º–∏ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞–ª–∏ –≤–∞–º –ø—Ä–∏ –æ—Ü—ñ–Ω—Ü—ñ —Ç–æ–≤–∞—Ä—É.
#             üìç –í–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É —Ä–∞–∑–æ–º –∑ –≤–∞—Ä—Ç—ñ—Å—Ç—é –¥–æ—Å—Ç–∞–≤–∫–∏ –±—É–¥–µ —Å–ø–ª–∞—á—É–≤–∞—Ç–∏—Å—è –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É.
#             –ú—ñ–Ω—É—Å–∏ üõë
#             –í–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –≥—Ä–æ—à—ñ —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –º–∏ –æ–ø–ª–∞—Ç–∏–º–æ —Ç–æ–≤–∞—Ä –Ω–∞ –ø–æ—à—Ç—ñ.'''
#         bot.send_message(call.message.chat.id, delivery_message)
#
#         markup = types.InlineKeyboardMarkup(row_width=1)
#         continue_button = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º', callback_data='continue_cash_on_delivery')
#         markup.add(continue_button)
#         bot.send_message(call.message.chat.id, '–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:', reply_markup=markup)
#     elif call.data == 'system_delivery':
#         delivery_message = '''üí≥ –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É
#
#             üìç –î–æ—Å—Ç–∞–≤–∫–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è —Ç–∞–∫–æ–∂ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º.
#             üìç –ü—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≤–∏ –Ω–µ –≤–∫–∞–∑—É—î—Ç–µ —Ü—ñ–Ω–∏.
#             üìç –Ø–∫ —Ç—ñ–ª—å–∫–∏ –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ —Ç–æ–≤–∞—Ä, –≥—Ä–æ—à—ñ –±—É–¥—É—Ç—å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ñ –Ω–∞ –≤–∞—à—É –∫–∞—Ä—Ç—É.'''
#         markup = types.InlineKeyboardMarkup(row_width=1)
#         continue_button = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º', callback_data='continue_cash_on_delivery')
#         markup.add(continue_button)
#         bot.send_message(call.message.chat.id, delivery_message, reply_markup=markup)
# @bot.callback_query_handler(func=lambda call: call.data == 'continue_cash_on_delivery')
# def handle_continue_cash_on_delivery(call):
#     continue_message = '–í–∏ –æ–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø—Ä–æ–¥–æ–≤–∂—Ç–µ –ø—Ä–æ—Ü–µ—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.'
#     bot.send_message(call.message.chat.id, continue_message)



# –¶–µ–π –∫–æ–¥ –ø—Ä–∞—Ü—é—î
@bot.callback_query_handler(func=lambda call: call.data in ['yes', 'no'])
def handle_callback_query(call):
    message = call.message
    status1 = get_price_status(current_order_number)

    owner_id = message.chat.id
    group_id = '-917631518'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ñ–∞–∫—Ç–∏—á–Ω–∏–π ID –≤–∞—à–æ—ó –≥—Ä—É–ø–∏
    if call.data == 'yes':
        if status1 == 15 or status1 is None :
            send_delivery_options(message, owner_id, group_id)
            update_price_status(current_order_number, 14)  # –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ 4

        elif status1==14 :
            bot.send_message(message.chat.id,"–¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤ –≤–∏–±—ñ—Ä")


    elif call.data == 'no':
        if get_price_status(current_order_number) is None:
            bot.send_message(message.chat.id,
                             "–ú–∏ –ø–æ–≤–∞–∂–∞—î–º–æ —Ç–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è. \n\nüìç–û–¥–∏–Ω –∑ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ –æ–∑–Ω–∞–π–æ–º–∏—Ç—å—Å—è –∑ —Ç–≤–æ—ó–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º, —Ç–∞ *–º–æ–∂–ª–∏–≤–æ –±—É–¥–µ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ —ñ–Ω—à–∞ —Ü—ñ–Ω–∞*.")
            update_price_status(current_order_number, 14)  # –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ 3

            propose_price(message, owner_id, group_id)
        else:
            bot.send_message(message.chat.id,"–¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤ –≤–∏–±—ñ—Ä")




def send_delivery_options(message, owner_id, group_id):
    # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–±–æ—Ä–æ–º —Å–ø–æ—Å–æ–±—É –¥–æ—Å—Ç–∞–≤–∫–∏
    markup = types.InlineKeyboardMarkup(row_width=2)
    delivery_option1 = types.InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ #1', callback_data='delivery_option1')
    delivery_option2 = types.InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ #2', callback_data='delivery_option2')
    markup.add(delivery_option1, delivery_option2)
    bot.send_message(owner_id, '–û–±–µ—Ä–∏ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏:', reply_markup=markup)


def propose_price(message, owner_id, group_id):
    global current_order_number
    if current_order_number:
        bot.send_message(group_id,
                         f"@{message.chat.username} –Ω–µ –ø–æ–≥–æ–¥–∏–≤—Å—è –∑ —Ü—ñ–Ω–æ—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∏–º\n–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {current_order_number}")
    else:
        bot.send_message(group_id, f"@{message.chat.username} –Ω–µ –ø–æ–≥–æ–¥–∏–≤—Å—è –∑ —Ü—ñ–Ω–æ—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∏–º")


@bot.message_handler(commands=['send_price'])
def handle_send_price(message):
    if message.from_user.id == 788388571 or message.from_user.id == 5792353056 or message.from_user.id ==5792353056:
        bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
        bot.register_next_step_handler(message, process_order_number)
    else:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.')



def send_broadcast_message(message):
    if message.from_user.id == 788388571 or message.from_user.id == 5792353056 or message.from_user.id ==5792353056:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ä–æ–∑—Å–∏–ª–∫–∏: ")
        bot.register_next_step_handler(message, send_broadcast_message2)
    else:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.')



def send_broadcast_message2(message):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    message_text = message.text
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.execute("SELECT DISTINCT user_id FROM photos")
    user_ids = [row[0] for row in cursor.fetchall()]

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ–∂–Ω–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    for user_id in user_ids:
        bot.send_message(chat_id=user_id, text=message_text)
def process_order_number(message):
    user_id = message.text  # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

    conn2 = sqlite3.connect('photos.db')
    cursor2 = conn2.cursor()
    cursor2.execute('SELECT * FROM photos WHERE user_id = ?', (user_id,))
    result2 = cursor2.fetchone()
    conn2.close()

    if result2:
        bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:')
        bot.register_next_step_handler(message, process_order_number_input, user_id)
    else:
        bot.reply_to(message, '–ù–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–≤–µ–¥–µ–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
def handle_find_order(message):
    if message.from_user.id == 788388571 or message.from_user.id==5792353056:
        bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å id –∑–∞–º–æ–≤–Ω–∏–∫–∞')
        bot.register_next_step_handler(message, process_order_search)
    else:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏.')
def process_order_search(message):
    user_id = message.text  # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

    conn2 = sqlite3.connect('photos.db')
    cursor2 = conn2.cursor()
    cursor2.execute('SELECT * FROM photos WHERE user_id = ?', (user_id,))
    result2 = cursor2.fetchone()
    conn2.close()

    if result2:
        bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:')
        bot.register_next_step_handler(message, process_order_search_input, user_id)
    else:
        bot.reply_to(message, '–ù–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')
def process_order_search_input(message, user_id):
    order_number = message.text

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()
    conn.close()

    if result:
        checkItems(message,user_id,order_number)
        # –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é checkItems —è–∫ –æ–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É

    else:
        bot.reply_to(message, '–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')
def checkItems(message, user_id, order_number):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞


    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö order_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    cursor.execute('SELECT * FROM photos WHERE user_id = ? AND order_number = ?', (user_id, order_number))
    result = cursor.fetchone()

    if result:


            # –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ order_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            cursor.execute(
                'SELECT status, price, file, nomer_ttn,delivery, nomer_card FROM photos WHERE user_id = ? AND order_number = ?',
                (user_id, order_number))
            status_record = cursor.fetchone()

            if status_record:
                status = status_record[0]
                price = status_record[1]
                photo_data = base64.b64decode(status_record[2])
                ttn_number = status_record[3]
                delivery_field = status_record[4]
                card_number = status_record[5]
                caption = f"üü¢ *–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:* {order_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\nüü¢ *–¶—ñ–Ω–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏:* {price} –≥—Ä–Ω\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\nüü¢ *–ù–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó:* {ttn_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\nüü¢ *–ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∏:* {card_number}\n‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨‚ñ¨\nüü¢–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_field}"

                # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç–æ–º —Ç–∞ –æ–±'—î–∫—Ç–æ–º markup
                bot.send_photo(chat_id=message.chat.id, photo=io.BytesIO(photo_data), caption=caption,
                               parse_mode='Markdown')
            else:
                bot.reply_to(message, f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç—É—Å—É –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –Ω–æ–º–µ—Ä–æ–º {order_number}")
def process_order_number_input(message, user_id):
    order_number = message.text

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–æ–º–µ—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()

    if result:
        owner_id = result[1]  # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≤–ª–∞—Å–Ω–∏–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —î –≤ –¥—Ä—É–≥–æ–º—É —Å—Ç–æ–≤–ø—Ü—ñ
        bot.reply_to(message, '–í–≤–µ–¥—ñ—Ç—å —Ü—ñ–Ω—É')
        bot.register_next_step_handler(message, lambda msg: process_price(msg, order_number, user_id))

    else:
        bot.reply_to(message, '–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ')

    conn.close()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —Ü—ñ–Ω–∏ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ó—ó –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

def process_price(message,order_number, user_id):
    # conn2 = sqlite3.connect('photos.db')
    # cursor2 = conn2.cursor()
    # cursor2.execute('UPDATE photos SET price_status=None',
    #                (user_id, order_number))
    # conn2.commit()
    # conn2.close()
    update_price_status(order_number, None)

    price = message.text
    bot.send_message(user_id, f"‚ÄºÔ∏è*–ó–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ –Ω–∞–º–∏ —Ü—ñ–Ω–∞* –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_number}: *{price}  –≥—Ä–Ω*", parse_mode='Markdown')

    # –ó–¥—ñ–π—Å–Ω—é—î–º–æ –¥—ñ—ó –∑ —Ü—ñ–Ω–æ—é, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —ó—ó –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö

    # –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Å —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö, –ø–æ–≤'—è–∑–∞–Ω–∏–π –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —ñ –Ω–æ–º–µ—Ä–æ–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE photos SET status = 2, Price = ? WHERE user_id = ? AND order_number = ?', (price, user_id, order_number))
    conn.commit()
    conn.close()
    # –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –∑–º—ñ–Ω–Ω—É
    global current_order_number
    current_order_number = order_number

    # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
    markup = types.InlineKeyboardMarkup(row_width=2)
    yes_button = types.InlineKeyboardButton('‚úÖ –¢–∞–∫', callback_data='yes')
    no_button = types.InlineKeyboardButton('‚ùå –ù—ñ', callback_data='no')
    markup.add(yes_button, no_button)
    bot.send_message(user_id, '–ü–æ–≥–æ–¥–∂—É—î—à—Å—è –∑ —Ü—ñ–Ω–æ—é?', reply_markup=markup)

# def process_price(message, owner_id, order_number):
#     price = message.text
#
#     # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ü—ñ–Ω—É –≤–ª–∞—Å–Ω–∏–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
#     bot.send_message(owner_id, f"–¶—ñ–Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_number}: {price}  –≥—Ä–Ω")
#
#     # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ü—ñ–Ω–∏ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
#     conn = sqlite3.connect('photos.db')
#     cursor = conn.cursor()
#     cursor.execute('UPDATE photos SET status = 2, Price = ? WHERE order_number = ?', (price, order_number))
#     conn.commit()
#     cursor.close()
#     conn.close()
#
#     # –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –∑–º—ñ–Ω–Ω—É
#     global current_order_number
#     current_order_number = order_number
#
#     # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏
#     markup = types.InlineKeyboardMarkup(row_width=2)
#     yes_button = types.InlineKeyboardButton('–¢–∞–∫', callback_data='yes')
#     no_button = types.InlineKeyboardButton('–ù—ñ', callback_data='no')
#     markup.add(yes_button, no_button)
#     bot.send_message(owner_id, '–ü–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ —Ü—ñ–Ω–æ—é?', reply_markup=markup)





def propose_price(message, owner_id, group_id):
    global current_order_number
    if current_order_number:
        bot.send_message(group_id,
                         f"@{message.chat.username} –Ω–µ –ø–æ–≥–æ–¥–∏–≤—Å—è –∑ —Ü—ñ–Ω–æ—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∏–º\n–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {current_order_number}")
    else:
        bot.send_message(group_id, f"@{message.chat.username} –Ω–µ –ø–æ–≥–æ–¥–∏–≤—Å—è –∑ —Ü—ñ–Ω–æ—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∏–º")


def send_delivery_options(message, owner_id, group_id):
    global current_order_number
    if current_order_number:
        # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
        markup = types.InlineKeyboardMarkup(row_width=2)
        delivery1_button = types.InlineKeyboardButton('üöö¬†–ù–∞–ª–æ–∂–∫–æ—é', callback_data='delivery1')
        delivery2_button = types.InlineKeyboardButton('üí≥ –ß–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É', callback_data='delivery2')
        markup.add(delivery1_button, delivery2_button)
        bot.send_message(owner_id, '–û–±–µ—Ä–∏ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏:', reply_markup=markup)
    else:
        bot.send_message(group_id, f"@{message.chat.username} –Ω–µ –ø–æ–≥–æ–¥–∏–≤—Å—è –∑ —Ü—ñ–Ω–æ—é –º–µ–Ω–µ–¥–∂–µ—Ä–∞. –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∏–º")


@bot.callback_query_handler(func=lambda call: call.data in ['delivery1', 'delivery2'])
def handle_delivery_selection(call):
    message = call.message
    owner_id = message.chat.id
    group_id = '-917631518'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ñ–∞–∫—Ç–∏—á–Ω–∏–π ID –≤–∞—à–æ—ó –≥—Ä—É–ø–∏

    if call.data == 'delivery1':

        if get_delivery_status(current_order_number) is None:
            update_order_status(current_order_number, 4)  # –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ 4

            # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É ‚Ññ1
            delivery1_message = """
                 üöö –î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º

‚ÄºÔ∏è¬†–ü—Ä–∏ –æ–±—Ä–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –≤–∏–¥—É –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ç–æ–≤–∞—Ä—É, —Ç—Ä–µ–±–∞ –≤–∫–∞–∑–∞—Ç–∏ —Ç–∞–∫—É —Ü—ñ–Ω—É, —è–∫—É –º–∏ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞–ª–∏ –≤–∞–º –ø—Ä–∏ –æ—Ü—ñ–Ω—Ü—ñ —Ç–æ–≤–∞—Ä—É.
‚ÄºÔ∏è –í–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É —Ä–∞–∑–æ–º –∑ –≤–∞—Ä—Ç—ñ—Å—Ç—é –¥–æ—Å—Ç–∞–≤–∫–∏ –±—É–¥–µ —Å–ø–ª–∞—á—É–≤–∞—Ç–∏—Å—è –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É. 
‚ÄºÔ∏è –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –±—É–¥—É—Ç—å –ø–µ—Ä–µ—Å–ª–∞–Ω—ñ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –Ω–∞—Ç–∏—Å–Ω–µ—à ‚Äú‚úÖ –û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º‚Äù.
 *–ù–µ–¥–æ–ª—ñ–∫–∏:*
 üìç¬†–¢–∏ –∑–º–æ–∂–µ—à –æ—Ç—Ä–∏–º–∞—Ç–∏ –≥—Ä–æ—à—ñ –ª–∏—à–µ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –º–∏ –æ–ø–ª–∞—Ç–∏–º–æ —Ç–æ–≤–∞—Ä –Ω–∞ –ø–æ—à—Ç—ñ."""

            markup = types.InlineKeyboardMarkup(row_width=1)
            choose_cod_button = types.InlineKeyboardButton('‚úÖ –û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º',
                                                           callback_data='choose_cod')
            markup.add(choose_cod_button)
            bot.send_message(owner_id, delivery1_message, reply_markup=markup)

        else:
            bot.send_message(owner_id, "–¢–∏ –≤–∂–µ –æ–±—Ä–∞–≤ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏.")

    elif call.data == 'delivery2':

        if get_delivery_status(current_order_number) is None:
            update_order_status(current_order_number, 4)  # –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ 4

            # –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É ‚Ññ2
            delivery2_message = """
üí≥ –î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É

‚ÄºÔ∏è –î–æ—Å—Ç–∞–≤–∫–∞ –∑–¥—ñ–π—Å–Ω—é—î—Ç—å—Å—è —Ç–∞–∫–æ–∂ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º.
‚ÄºÔ∏è –ü—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ç–∏ –Ω–µ –≤–∫–∞–∑—É—î—à —Ü—ñ–Ω–∏ –∑–∞ —Ç–æ–≤–∞—Ä.
‚ÄºÔ∏è –Ø–∫ —Ç—ñ–ª—å–∫–∏ –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ —Ç–æ–≤–∞—Ä, –≥—Ä–æ—à—ñ –±—É–¥—É—Ç—å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ñ –Ω–∞ —Ç–≤–æ—é –∫–∞—Ä—Ç—É.

‚ÄºÔ∏è –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –±—É–¥—É—Ç—å –ø–µ—Ä–µ—Å–ª–∞–Ω—ñ –ø—ñ—Å–ª—è —Ç–æ–≥–æ, —è–∫ –Ω–∞—Ç–∏—Å–Ω–µ—à ‚Äú‚úÖ –û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É‚Äù.
               """

            markup = types.InlineKeyboardMarkup(row_width=1)
            choose_system_delivery_button = types.InlineKeyboardButton('‚úÖ –û–±—Ä–∞—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫—É —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É',
                                                                       callback_data='choose_system_delivery')
            markup.add(choose_system_delivery_button)
            bot.send_message(owner_id, delivery2_message, reply_markup=markup)

        else:
            bot.send_message(owner_id, "–¢–∏ –≤–∂–µ –æ–±—Ä–∞–≤ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏.")


@bot.callback_query_handler(func=lambda call: call.data == 'choose_cod')
def handle_choose_cod(call):
    message = call.message
    owner_id = message.chat.id
    group_id = '-917631518'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ñ–∞–∫—Ç–∏—á–Ω–∏–π ID –≤–∞—à–æ—ó –≥—Ä—É–ø–∏

    if get_delivery_status(current_order_number) is None:
        # –û–Ω–æ–≤–∏—Ç–∏ –ø–æ–ª–µ delivery –Ω–∞ "–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º" —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
        update_delivery(current_order_number, "–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º")
        text2 = "‚ÄºÔ∏è*–í—ñ–¥–ø—Ä–∞–≤ —Å–≤—ñ–π —Ç–æ–≤–∞—Ä –∑–∞ –Ω–∏–∂—á–µ –≤–∫–∞–∑–∞–Ω–æ—é –∞–¥—Ä–µ—Å–æ—é:*\n\n" \
                "üè¢ –ü—Ä–∏—Å—è–∂–Ω—é–∫ –û—Ä–µ—Å—Ç –Ü–≥–æ—Ä–æ–≤–∏—á\n" \
                "‚òéÔ∏è +380679770216\n" \
                "üìç –†—ñ–≤–Ω–µ, –†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å\n" \
                "üìÆ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ –Ω–æ–º–µ—Ä 2"
        bot.send_message(message.chat.id, text2, parse_mode='Markdown')
        bot.send_message(message.chat.id,
                         f'‚ÄºÔ∏è–Ø–∫ —Ç—ñ–ª—å–∫–∏ –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, *–ø—Ä–∏–∫—Ä—ñ–ø—ñ—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—É*, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏:\n"–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" ‚û°Ô∏è "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó".',
                         parse_mode='Markdown')
        bot.send_message(group_id,
                         f"@{message.chat.username} –∑ —ñ–¥ `{message.chat.id}` –æ–±—Ä–∞–≤ –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º\n –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {current_order_number}",parse_mode="MarkdownV2")
    else:
        bot.send_message(owner_id, "–¢–∏ –≤–∂–µ –æ–±—Ä–∞–≤ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏.")


@bot.callback_query_handler(func=lambda call: call.data == 'choose_system_delivery')
def handle_choose_system_delivery(call):
    message = call.message
    owner_id = message.chat.id
    group_id = '-917631518'  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Ñ–∞–∫—Ç–∏—á–Ω–∏–π ID –≤–∞—à–æ—ó –≥—Ä—É–ø–∏

    if get_delivery_status(current_order_number) is None:
        # –û–Ω–æ–≤–∏—Ç–∏ –ø–æ–ª–µ delivery –Ω–∞ "–î–æ—Å—Ç–∞–≤–∫–∞ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º" —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
        update_delivery(current_order_number, "–î–æ—Å—Ç–∞–≤–∫–∞ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É")

        text2 = "‚ÄºÔ∏è*–í—ñ–¥–ø—Ä–∞–≤ —Å–≤—ñ–π —Ç–æ–≤–∞—Ä –∑–∞ –Ω–∏–∂—á–µ –≤–∫–∞–∑–∞–Ω–æ—é –∞–¥—Ä–µ—Å–æ—é:*\n\n" \
                "üè¢ –ü—Ä–∏—Å—è–∂–Ω—é–∫ –û—Ä–µ—Å—Ç –Ü–≥–æ—Ä–æ–≤–∏—á\n" \
                "‚òéÔ∏è +380679770216\n" \
                "üìç –†—ñ–≤–Ω–µ, –†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å\n" \
                "üìÆ –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ –Ω–æ–º–µ—Ä 2"
        bot.send_message(message.chat.id, text2, parse_mode='Markdown')
        bot.send_message(message.chat.id,
                         f'‚ÄºÔ∏è–Ø–∫ —Ç—ñ–ª—å–∫–∏ –≤–∏ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, *–ø—Ä–∏–∫—Ä—ñ–ø—ñ—Ç—å –Ω–∞–∫–ª–∞–¥–Ω—É*, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏:\n"–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" ‚û°Ô∏è "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó". \n–¢–∞–º –∂ —Å–∞–º–æ –≤–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä—ñ–ø–∏—Ç–∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏.',
                         parse_mode='Markdown')
        bot.send_message(group_id,
                         f"@{message.chat.username} –∑ —ñ–¥ `{message.chat.id}` –æ–±—Ä–∞–≤ –¥–æ—Å—Ç–∞–≤–∫—É —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É\n –ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {current_order_number}",parse_mode="MarkdownV2")
    else:
        bot.send_message(owner_id, "–¢–∏ –≤–∂–µ –æ–±—Ä–∞–≤ —Å–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏.")


def get_delivery_status(order_number):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT delivery FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()
    cursor.close()
    conn.close()
    if result:
        return result[0]
    else:
        return None


def get_ttn_status(order_number):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT nomer_ttn FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()
    cursor.close()
    conn.close()
    if result:
        return result[0]
    else:
        return None
def get_card_status(order_number):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT nomer_card FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()
    cursor.close()
    conn.close()
    if result:
        return result[0]
    else:
        return None


def get_price_status(order_number):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('SELECT price_status FROM photos WHERE order_number = ?', (order_number,))
    result = cursor.fetchone()
    cursor.close()
    conn.close()
    if result:
        return result[0]
    else:
        return None
def update_delivery(order_number, delivery):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE photos SET delivery = ? WHERE order_number = ?', (delivery, order_number))
    conn.commit()
    cursor.close()
    conn.close()


def update_order_status(order_number, status):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE photos SET status = ? WHERE order_number = ?', (status, order_number))
    conn.commit()
    cursor.close()
    conn.close()

def update_price_status(order_number, status):
    conn = sqlite3.connect('photos.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE photos SET price_status = ? WHERE order_number = ?', (status, order_number))
    conn.commit()
    cursor.close()
    conn.close()
# def get_delivery_option(option):
#     if option == 'choose_delivery':
#         return 1  # –ó–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞–ª–æ–∂–Ω–∏–º –ø–ª–∞—Ç–µ–∂–µ–º
#     elif option == 'delivery_option2':
#         return 2  # –ó–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É

# –û—á–∏—â–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó current_order_number –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
current_order_number = 1


@bot.message_handler(func=lambda message: message.text == '–†–µ—á—ñ, —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ')
def handle_buying_items(message):
    markup = create_inline_keyboard()
    bot.send_message(message.chat.id, '–û—Å—å —Å–ø–∏—Å–æ–∫ —Ä–µ—á–µ–π, —è–∫—ñ –º–∏ –∫—É–ø—É—î–º–æ:', reply_markup=markup)


def create_inline_keyboard():
    markup = types.InlineKeyboardMarkup(row_width=2)
    button_nike = types.InlineKeyboardButton('Nike', callback_data='buying_item_nike')
    button_adidas = types.InlineKeyboardButton('Adidas', callback_data='buying_item_adidas')
    button_reebok = types.InlineKeyboardButton('Reebok', callback_data='buying_item_reebok')
    button_champion = types.InlineKeyboardButton('Champion', callback_data='buying_item_champion')
    button_lacoste = types.InlineKeyboardButton('Lacoste', callback_data='buying_item_lacoste')
    button_ralph_lauren = types.InlineKeyboardButton('Ralph Lauren', callback_data='buying_item_ralph_lauren')
    button_carhartt = types.InlineKeyboardButton('Carhartt', callback_data='buying_item_carhartt')
    button_dickies = types.InlineKeyboardButton('Dickies', callback_data='buying_item_dickies')
    button_stussy = types.InlineKeyboardButton('St√ºssy', callback_data='buying_item_stussy')

    markup.add(
        button_nike, button_adidas, button_reebok, button_champion,
        button_lacoste, button_ralph_lauren, button_carhartt, button_dickies, button_stussy
    )

    return markup


@bot.callback_query_handler(func=lambda call: call.data.startswith('buying_item_'))
def handle_buying_item_callback(call):
    item_name = call.data.replace('buying_item_', '')

    if item_name == 'nike':
        message = '''
        Nike

- –í—ñ–Ω—Ç–∞–∂–Ω—ñ –∫–æ—Ñ—Ç–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.
- –í—ñ–Ω—Ç–∞–∂–Ω—ñ —Ñ—É—Ç–±–æ–ª–∫–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.
- –í—ñ–Ω—Ç–∞–∂–Ω—ñ —à—Ç–∞–Ω–∏ —Ç–∞ —à–æ—Ä—Ç–∏, –Ω–∞ —Å—Ç—è–∂–∫–∞—Ö, –∫–∞—Ä–≥–æ.
        '''
    elif item_name == 'adidas':
        message = '''Adidas

- –í—ñ–Ω—Ç–∞–∂–Ω—ñ –∫–æ—Ñ—Ç–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.
- –í—ñ–Ω—Ç–∞–∂–Ω—ñ —Ñ—É—Ç–±–æ–ª–∫–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.
- Adidas Equipment.'''
    elif item_name == 'reebok':
        message = '''Reebok

- –í—ñ–Ω—Ç–∞–∂–Ω—ñ –∫–æ—Ñ—Ç–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.'''
    elif item_name == 'champion':
        message = '''Champion

- –í—ñ–Ω—Ç–∞–∂–Ω—ñ –∫–æ—Ñ—Ç–∏, –∑ –º–∞–ª–µ–Ω—å–∫–∏–º —Ç–∞ –∑ –≤–µ–ª–∏–∫–∏–º –ª–æ–≥–æ.
'''
    elif item_name == 'lacoste':
        message = '''Lacoste 

- –í—ñ–Ω—Ç–∞–∂–Ω—ñ –∫–æ—Ñ—Ç–∏, —Å–≤–µ—Ç—Ä–∏.
- –§—É—Ç–±–æ–ª–∫–∏, –ø–æ–ª–æ.
- –ë–æ–º–±–µ—Ä–∏.'''
    elif item_name == 'ralph_lauren':
        message = '''Ralph Lauren 

- 1/4 1/3 zip
- Harrington jackets.
- –ü–æ–ª–æ —Ñ—É—Ç–±–æ–ª–∫–∏.
- –†–µ–≥–±—ñ–π–∫–∏.
- –†—ñ–∑–Ω—ñ –∫–æ—Ñ—Ç–∏.'''
    elif item_name == 'carhartt':
        message = '''Carhartt 

- –†—ñ–∑–Ω—ñ –≤–∏–¥–∏ —à—Ç–∞–Ω—ñ–≤, –¥–∂–∏–Ω—Å—ñ–≤, –≤ –±—É–¥—å —è–∫–æ–º—É —Å—Ç–∞–Ω—ñ.
- Active jackets.
- Harrington jackest.
- –ö–æ—Ñ—Ç–∏, —Ö—É–¥–∞–∫–∏.
- –§—É—Ç–±–æ–ª–∫–∏.
- –†—ñ–∑–Ω–∏–π Workwear.'''
    elif item_name == 'dickies':
        message = '''Dickies

- –†—ñ–∑–Ω—ñ –≤–∏–¥–∏ —à—Ç–∞–Ω—ñ–≤, –¥–∂–∏–Ω—Å—ñ–≤,  –≤ –±—É–¥—å —è–∫–æ–º—É —Å—Ç–∞–Ω—ñ.
- Harington Jackets.'''
    elif item_name == 'stussy':
        message = '''St√ºssy

- –ö–æ—Ñ—Ç–∏.
- –§—É—Ç–±–æ–ª–∫–∏.'''
    else:
        message = '–ù–µ–≤—ñ–¥–æ–º–∞ —Ä—ñ—á'

    bot.send_message(call.message.chat.id, message)
#     917631518

bot.polling(none_stop=True)